{"version":3,"sources":["../src/index.js"],"names":["axios","require","set","get","parse","print","getQueryBuilders","getMutationBuilders","getSubscriptionBuilders","debug","BaseClient","constructor","config","dataSource","Error","httpBaseUrl","socketBaseUrl","Object","assign","httpEndpoint","ds","socketEndpoint","enableQuery","enableSubscription","enableMutation","accessKey","accessSecret","maxQueryDepth","schema","_getSchema","generateQueryFns","generateSubscriptionFns","subscriptions","generateMutationFns","getQueries","_getApiList","getSubscriptions","getMutations","doRawQuery","query","requestOptions","dataKey","cleanQuery","_doRequest","err","message","toString","doBatchQuery","queries","methods","keys","length","forEach","x","type","documents","map","args","builder","base","shift","variableDefinitions","directives","selections","concat","types","queryType","builders","rootName","name","ignoreFields","_getIgnoreFields","bind","maxDepth","key","queryFn","_sanitizeArgs","result","pagedResult","_getPagedResults","queryBuilder","subscriptionType","subscriptionFn","doRawSubscription","queryId","_getQueryId","Promise","resolve","emitter","channel","_ensureSubscriptionChannel","reject","push","receive","res","EventEmitter","_getEventImplementation","subscriptionId","mutationType","mutationFn","options","authHeaders","_getAuthHeaders","headers","post","status","errors","data","Array","isArray","error","isJoined","Socket","_getSocketImplementation","socket","_getSocketOptions","connect","onMessage","event","payload","find","emit","onConnError","setTimeout","join","filter","prefix","_attachNextFn","prefixStr","Boolean","argPrefixStr","replace","page","next","cursor","pagingArgs","paging","newArgs","JSON","stringify","newResult","module","exports"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst set = require('lodash.set');\nconst get = require('lodash.get');\nconst { parse } = require('graphql/language/parser');\nconst { print } = require('graphql/language/printer');\nconst { getQueryBuilders, getMutationBuilders, getSubscriptionBuilders } = require('./util');\n\nconst debug = require('debug')('BaseClient');\n\nclass BaseClient {\n  constructor(config) {\n    if (!config.dataSource) {\n      throw new Error('BaseClient requires dataSource config');\n    }\n\n    if (config.httpBaseUrl) {\n      throw Error('config.httpBaseUrl is deprecated');\n    }\n    if (config.socketBaseUrl) {\n      throw Error('config.socketBaseUrl is deprecated');\n    }\n\n    this.config = Object.assign(\n      {\n        httpEndpoint: ds => `https://ocap.arcblock.io/api/${ds}`,\n        socketEndpoint: ds => `wss://ocap.arcblock.io/api/${ds}/socket`,\n        enableQuery: true,\n        enableSubscription: true,\n        enableMutation: true,\n        accessKey: '',\n        accessSecret: '',\n        maxQueryDepth: 4,\n      },\n      config\n    );\n\n    this.schema = this._getSchema(this.config.dataSource);\n    if (!this.schema) {\n      throw new Error(`BaseClient: unsupported dataSource ${this.config.dataSource}`);\n    }\n\n    if (this.config.enableQuery) {\n      this.generateQueryFns(this.schema);\n    }\n\n    if (this.config.enableSubscription) {\n      this.generateSubscriptionFns(this.schema);\n      this.subscriptions = {}; // event emitter objects\n    }\n\n    if (this.config.enableMutation) {\n      this.generateMutationFns(this.schema);\n    }\n  }\n\n  getQueries() {\n    return this._getApiList('query');\n  }\n\n  getSubscriptions() {\n    return this._getApiList('subscription');\n  }\n\n  getMutations() {\n    return this._getApiList('mutation');\n  }\n\n  /**\n   * Send raw query to ocap and return results\n   *\n   * @param {*} query\n   * @memberof BaseClient\n   * @return Promise\n   */\n  doRawQuery(query, requestOptions = {}, dataKey) {\n    try {\n      const cleanQuery = print(parse(query));\n      return this._doRequest(cleanQuery, requestOptions, dataKey);\n    } catch (err) {\n      throw new Error(`BaseClient: invalid raw query ${err.message || err.toString()}`);\n    }\n  }\n\n  /**\n   * Do multiple queries in a single http request\n   *\n   * @param {Object} queries - use method as key and arguments as value\n   * @param {Object} requestOptions\n   * @memberof BaseClient\n   */\n  doBatchQuery(queries, requestOptions) {\n    const methods = Object.keys(queries);\n    if (methods.length === 0) {\n      throw new Error('doBatchQuery requires at least one query');\n    }\n\n    methods.forEach(x => {\n      if (typeof this[x] !== 'function') {\n        throw new Error(`doBatchQuery got invalid query method ${x}`);\n      }\n      if (this[x].type !== 'query') {\n        throw new Error(`doBatchQuery got none query method ${x}`);\n      }\n    });\n\n    const documents = methods.map(x => {\n      const args = queries[x] || {};\n      const query = typeof args === 'string' ? args : this[x].builder(args, requestOptions);\n      return parse(query);\n    });\n\n    const base = documents.shift();\n\n    let variableDefinitions = get(base, 'definitions[0].variableDefinitions');\n    let directives = get(base, 'definitions[0].directives');\n    let selections = get(base, 'definitions[0].selectionSet.selections');\n\n    documents.forEach(x => {\n      variableDefinitions = variableDefinitions.concat(\n        get(x, 'definitions[0].variableDefinitions', [])\n      );\n      directives = directives.concat(get(x, 'definitions[0].directives', []));\n      selections = selections.concat(get(x, 'definitions[0].selectionSet.selections', []));\n    });\n\n    set(base, 'definitions[0].variableDefinitions', variableDefinitions);\n    set(base, 'definitions[0].directives', directives);\n    set(base, 'definitions[0].selectionSet.selections', selections);\n\n    return this._doRequest(print(base), requestOptions);\n  }\n\n  generateQueryFns() {\n    const { types, queryType } = this.schema;\n    if (!queryType) {\n      return;\n    }\n\n    const builders = getQueryBuilders({\n      types,\n      rootName: queryType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const queryFn = async (args, requestOptions = {}) => {\n        const query = builders[key](this._sanitizeArgs(args), (requestOptions || {}).ignoreFields);\n        const result = await this._doRequest(query, requestOptions, key);\n        const pagedResult = this._getPagedResults({\n          result,\n          queryBuilder: builders[key],\n          args,\n          dataKey: key,\n          requestOptions,\n        });\n\n        return pagedResult;\n      };\n\n      queryFn.type = 'query';\n      queryFn.args = builders[key].args;\n      queryFn.builder = builders[key];\n\n      this[key] = queryFn;\n    });\n  }\n\n  generateSubscriptionFns() {\n    const { types, subscriptionType } = this.schema;\n    if (!subscriptionType) {\n      return;\n    }\n\n    const builders = getSubscriptionBuilders({\n      types,\n      rootName: subscriptionType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const subscriptionFn = async args => {\n        const query = builders[key](this._sanitizeArgs(args));\n        return this.doRawSubscription(query);\n      };\n\n      subscriptionFn.type = 'subscription';\n      subscriptionFn.args = builders[key].args;\n      subscriptionFn.builder = builders[key];\n\n      this[key] = subscriptionFn;\n    });\n  }\n\n  async doRawSubscription(query) {\n    debug('doSubscription.query', query);\n    const queryId = this._getQueryId(query);\n    if (this.subscriptions[queryId]) {\n      return Promise.resolve(this.subscriptions[queryId].emitter);\n    }\n\n    const channel = await this._ensureSubscriptionChannel();\n    return new Promise((resolve, reject) => {\n      channel\n        .push('doc', { query })\n        .receive('ok', res => {\n          debug('subscription success', { queryId, res });\n\n          // create a new EventEmitter for each subscription\n          const EventEmitter = this._getEventImplementation();\n          this.subscriptions[queryId] = new EventEmitter();\n          this.subscriptions[queryId].subscriptionId = res.subscriptionId;\n\n          resolve(this.subscriptions[queryId]);\n        })\n        .receive('error', err => {\n          debug('subscription error', err);\n          reject(err);\n        });\n    });\n  }\n\n  generateMutationFns() {\n    const { types, mutationType } = this.schema;\n    if (!mutationType) {\n      return;\n    }\n\n    const builders = getMutationBuilders({\n      types,\n      rootName: mutationType.name,\n      ignoreFields: this._getIgnoreFields.bind(this),\n      maxDepth: this.config.maxQueryDepth,\n    });\n\n    Object.keys(builders).forEach(key => {\n      const mutationFn = async (args, requestOptions = {}) => {\n        const query = builders[key](this._sanitizeArgs(args), (requestOptions || {}).ignoreFields);\n        return this._doRequest(query, requestOptions, key);\n      };\n\n      mutationFn.type = 'mutation';\n      mutationFn.args = builders[key].args;\n      mutationFn.builder = builders[key];\n\n      this[key] = mutationFn;\n    });\n  }\n\n  /**\n   * Send a request to ocap service\n   *\n   * @param {string} query raw graphql query string\n   * @param {object} requestOptions\n   * @param {string} dataKey which field to extract if request success\n   * @return Promise\n   * @memberof BaseClient\n   */\n  async _doRequest(query, requestOptions, dataKey) {\n    debug('doRequest.query', query);\n    const httpEndpoint =\n      typeof this.config.httpEndpoint === 'function'\n        ? this.config.httpEndpoint(this.config.dataSource)\n        : this.config.httpEndpoint;\n\n    // combine custom headers and auth headers\n    const options = requestOptions || {};\n    const authHeaders = this._getAuthHeaders(query);\n    options.headers = Object.assign(options.headers || {}, authHeaders);\n    debug('_doRequest.headers', options.headers);\n\n    const res = await axios.post(httpEndpoint, { query }, options);\n\n    debug('_doRequest.response', {\n      status: res.status,\n      // data: res.data.data,\n      errors: res.data.errors,\n    });\n\n    if (res.status === 200) {\n      if (Array.isArray(res.data.errors) && res.data.errors.length) {\n        const error = new Error('GraphQL Response Error');\n        error.errors = res.data.errors;\n        throw error;\n      }\n\n      return dataKey && res.data.data[dataKey] ? res.data.data[dataKey] : res.data.data;\n    }\n\n    throw new Error(`GraphQL Status Error ${res.status}`);\n  }\n\n  /**\n   * Ensure we have a open socket connection and act as switcher on message received\n   *\n   * @returns Promise\n   * @memberof BaseClient\n   */\n  async _ensureSubscriptionChannel() {\n    if (this.channel && this.channel.isJoined()) {\n      return Promise.resolve(this.channel);\n    }\n\n    const socketEndpoint =\n      typeof this.config.socketEndpoint === 'function'\n        ? this.config.socketEndpoint(this.config.dataSource)\n        : this.config.socketEndpoint;\n\n    const Socket = this._getSocketImplementation();\n    this.socket = new Socket(socketEndpoint, this._getSocketOptions());\n    this.socket.connect();\n    this.socket.onMessage(({ event, payload }) => {\n      debug('socket.onMessage', { event, payload });\n      if (event === 'subscription:data') {\n        const queryId = Object.keys(this.subscriptions).find(\n          x => this.subscriptions[x].subscriptionId === payload.subscriptionId\n        );\n        if (queryId) {\n          debug('subscription.onMessage', { queryId, subscriptionId: payload.subscriptionId });\n          this.subscriptions[queryId].emit('data', payload.result.data);\n        }\n      }\n    });\n\n    // auto reconnect on error\n    this.socket.onConnError(err => {\n      debug('socket.reconnect.onConnError', err);\n      Object.keys(this.subscriptions).forEach(queryId => {\n        this.subscriptions[queryId].emit('error', err);\n      });\n      setTimeout(() => {\n        this.socket.connect();\n      }, 1000);\n    });\n\n    this.channel = this.socket.channel('__absinthe__:control');\n    return new Promise((resolve, reject) => {\n      this.channel\n        .join()\n        .receive('ok', res => {\n          debug('Channel join success', res);\n          resolve(this.channel);\n        })\n        .receive('error', err => {\n          debug('Channel join error', err);\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Generate list of methods with certain type\n   *\n   * @param {*} type\n   * @returns\n   * @memberof BaseClient\n   */\n  _getApiList(type) {\n    return Object.keys(this).filter(x => typeof this[x] === 'function' && this[x].type === type);\n  }\n\n  _sanitizeArgs(args) {\n    return args;\n  }\n\n  /**\n   * Make a paginated query\n   *\n   * @param {Object} { data, queryBuilder, args, type }\n   * @returns Object with possible `next` method\n   * @memberof BaseClient\n   */\n  _getPagedResults({ result, queryBuilder, args, dataKey, prefix = '', requestOptions = {} }) {\n    this._attachNextFn({ result, queryBuilder, args, dataKey, prefix, requestOptions });\n\n    const keys = Object.keys(result);\n    keys.forEach(key => {\n      if (!result[key] || typeof result[key] !== 'object' || Array.isArray(result[key])) {\n        return false;\n      }\n\n      const prefixStr = [prefix, key].filter(Boolean).join('.');\n      const argPrefixStr = prefixStr.replace(`${dataKey}`, '').replace(/^\\./, '');\n      this._attachNextFn({\n        result: result[key],\n        queryBuilder,\n        args,\n        dataKey,\n        prefix,\n        argPrefixStr,\n        requestOptions,\n      });\n\n      // add pagination methods for nested fields\n      this._getPagedResults({\n        result: result[key],\n        queryBuilder,\n        args,\n        dataKey,\n        prefix,\n      });\n    });\n\n    return result;\n  }\n  _attachNextFn({\n    result,\n    queryBuilder,\n    args,\n    dataKey,\n    prefix = '',\n    argPrefixStr = '',\n    requestOptions = {},\n  }) {\n    if (\n      result.page &&\n      result.page.next &&\n      result.page.cursor &&\n      Array.isArray(result.data) &&\n      !result.next\n    ) {\n      const pagingArgs = {\n        paging: Object.assign({}, args.paging || {}, { cursor: result.page.cursor }),\n      };\n      const newArgs = Object.assign(\n        {},\n        args,\n        argPrefixStr ? { [argPrefixStr]: pagingArgs } : pagingArgs\n      );\n      debug(\n        '_attachNextFn',\n        JSON.stringify({ argPrefixStr, prefix, page: result.page, args, newArgs })\n      );\n\n      result.next = async () => {\n        const query = queryBuilder(newArgs);\n        const newResult = await this._doRequest(query, requestOptions, dataKey);\n        return this._getPagedResults({\n          result: newResult,\n          queryBuilder,\n          args: newArgs,\n          dataKey,\n          prefix,\n          requestOptions,\n        });\n      };\n    }\n  }\n\n  _getSchema() {\n    throw new Error('_getSchema must be implemented in sub class');\n  }\n\n  _getIgnoreFields() {\n    throw new Error('_getIgnoreFields must be implemented in sub class');\n  }\n\n  _getSocketImplementation() {\n    throw new Error('_getSocketImplementation must be implemented in sub class');\n  }\n\n  _getSocketOptions() {\n    throw new Error('_getSocketOptions must be implemented in sub class');\n  }\n\n  _getEventImplementation() {\n    throw new Error('_getEventImplementation must be implemented in sub class');\n  }\n\n  _getQueryId() {\n    throw new Error('_getQueryId must be implemented in sub class');\n  }\n\n  _getAuthHeaders() {\n    return {};\n  }\n}\n\nmodule.exports = BaseClient;\n//# sourceMappingURL=index.js.map\n"],"file":"index.js"}